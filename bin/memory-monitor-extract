#!/usr/bin/env bash

function usage()
{
  echo "Parse andromeda application logs and extract MemoryMonitor statistics."
  echo ""
  echo "First export the MemoryMonitor statistics from Cloudwatch Logs to memory-monitor.log"
  echo "For example:"
  echo "awslogs get -GS --profile=dev andromeda-analysis-stage-logs aggregate --start='June 08 14:50:40 UTC 2017' --end='June 09 12:00:00 UTC 2017' --filter-pattern '\"MemoryMonitor\$\$logIpaPredictorMetrics\$1] {\"' > memory-monitor.log"
  echo ""
  echo "Usage: $(basename "$0") [options] application-log-file output-file"
  echo ""
  echo "options:"
  echo "  -h, --help                Print this message"
  echo "  -v, --verbose             Display verbose output"
}

function main() {
  : > "${outfile}"
  while read p; do
    echo "${p}" |
      sed 's/.*MemoryMonitor$$anonfun$com$lookout$andromeda$analysis$MemoryMonitor$$logIpaPredictorMetrics$1] //' |
      jq -r 'del(.taskMaxMemory) | [ values[] | tostring ] | join(", ")' >> "${outfile}"
  done <"${infile}"
}

set -eu -o pipefail

while [ $# -gt 0 ]; do
    case "$1" in
        (-h|--help)
            usage
            exit 0
            ;;
        (-v|--verbose)
            set -x;
            ;;
        (*)
            break
            ;;
    esac
    shift
done

declare infile="${1:-}"
declare outfile="${2:-}"

if [ -z "${infile}" ]; then
  >&2 echo "Error: No application-log-file specified."
  usage
  exit 1
fi

if [ -z "${outfile}" ]; then
  >&2 echo "Error: No output-file specified."
  usage
  exit 1
fi

main "$@"
